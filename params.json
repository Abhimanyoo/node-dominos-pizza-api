{"name":"Node-dominos-pizza-api","tagline":"This is a node.js wrapper for the dominos pizza apis","body":"PizzaPI API\r\n====\r\nThis is a node.js wrapper for the Domino's pizza APIs.\r\nThe original npm module ` dominos ` has stopped being maintained and will remain at it's last stable release. For new applications please use this new npm module ` pizzapi `.\r\n\r\n[![Join the chat at https://gitter.im/RIAEvangelist/node-dominos-pizza-api](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/RIAEvangelist/node-dominos-pizza-api?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\nThis work is licenced via the [DBAD Public Licence](http://www.dbad-license.org/). It is a derivative work from Dominos API.\r\n\r\n[![NPM Stats for dominos api](https://nodei.co/npm/pizzapi.png?downloads=true&downloadRank=true&stars=true)](https://www.npmjs.com/package/pizzapi)\r\n[![NPM Download Graph for dominos api](https://nodei.co/npm-dl/pizzapi.png?months=6&height=3)](https://www.npmjs.com/package/pizzapi)\r\n\r\n\r\nInstall PizzaPI\r\n====\r\nnpm install pizzapi\r\n\r\nContributing\r\n====\r\n\r\n1. Pull or Fork code. \r\n2. from the cloned directory run ` npm install ` (this will install required dependancies, depending on your system may require)\r\n3. be awesome!\r\n\r\n\r\nExamples\r\n====\r\n\r\nSee the examples directory for simple apps and demonstrations on using the basic functionality.\r\n\r\n<!--\r\nFor a more detailed / complicated example, see the awesome [PizzaGiver](https://github.com/madelinecameron/PizzaGiver)\r\n-->\r\n\r\nFinding Nearby Domino's Locations\r\n====\r\n\r\n|argument|type|default|required|\r\n|--------|----|-------|--------|\r\n|address|full or partial address string|null|true|\r\n|callback|function to pass the api result to|null|true|\r\n|type|Delivery, Carryout, all| all | false|\r\n\r\n### By Postal Code\r\n***this yields the least accurate information***\r\n\r\n    var pizzapi=require('pizzapi');\r\n    \r\n    pizzapi.Util.findNearbyStores(\r\n        '63102',\r\n        'Delivery',\r\n        function(storeData){\r\n            console.log(storeData);\r\n        }\r\n    );\r\n\r\n### By City and Postal Code\r\n***this yields less accurate information but is better than just using the postal code***\r\n\r\n    var pizzapi=require('pizzapi');\r\n    \r\n    pizzapi.Util.findNearbyStores(\r\n        'St. Louis, MO, 63102',\r\n        'Delivery',\r\n        function(storeData){\r\n            console.log(storeData);\r\n        }\r\n    );\r\n\r\n### Using Full or Nearly Full Address\r\n***this yields the best information and sorts stores by actual distance***\r\n\r\n    var pizzapi=require('pizzapi');\r\n    \r\n    pizzapi.Util.findNearbyStores(\r\n        '700 Clark Ave, St. Louis, MO, 63102',\r\n        'Delivery',\r\n        function(storeData){\r\n            console.log(storeData);\r\n        }\r\n    );\r\n\r\nDomino's Store Info\r\n====\r\n\r\n|argument|type|default|required|\r\n|--------|----|-------|--------|\r\n|callback|function to pass the api result to|null|true|\r\n\r\n\r\n    //Get Store Info for Store #4336\r\n    var pizzapi=require('pizzapi');\r\n    var myStore=new pizzapi.Store();\r\n    myStore.ID=4336;\r\n    \r\n    myStore.getInfo(\r\n        function(storeData){\r\n            console.log(storeData);\r\n        }\r\n    );\r\n\r\nMenu for Specific Domino's Store Location\r\n====\r\n\r\n|argument|type|default|required|\r\n|--------|----|-------|--------|\r\n|callback|function to pass the api result to|null|true|\r\n\r\n    //Get Menu for Store #4336\r\n    var pizzapi=require('pizzapi');\r\n    var myStore=new pizzapi.Store();\r\n    myStore.ID=4336;\r\n    \r\n    myStore.getMenu(\r\n        function(storeData){\r\n            console.log(storeData);\r\n        }\r\n    );\r\n\r\nTracking Domino's Pizza\r\n====\r\n\r\n### By Phone\r\n\r\n|argument|type|default|required|\r\n|--------|----|-------|--------|\r\n|phone|Phone number string or int|null|true|\r\n|callback|function to pass the api result to|null|true|\r\n    \r\n    var pizzapi=require('pizzapi');\r\n    \r\n    pizzapi.Track.byPhone(\r\n        2024561111,\r\n        function(pizzaData){\r\n            console.log(pizzaData);\r\n        }\r\n    );\r\n\r\n### By orderKey\r\n\r\n|argument|type|default|required|\r\n|--------|----|-------|--------|\r\n|orderKey|string or int|null|true|\r\n|storeID|sting or int|null|true|\r\n|callback|function to pass the api result to|null|true|\r\n\r\n    var pizzapi=require('pizzapi');\r\n    \r\n    pizzapi.Track.byId(\r\n        123456,\r\n        12345,\r\n        function(pizzaData){\r\n            console.log(pizzaData)\r\n        }\r\n    );\r\n\r\nDomino's Pizza Orders\r\n====\r\nThree classes exist to get orders started,\r\n\r\n|Class|Description|\r\n|-----|-----------|\r\n|dominos.class.Order|creates a basic order object|\r\n|dominos.class.Product|creates a basic product with a quantity of 1|\r\n\r\n### creating an order\r\n\r\n    var pizzapi=require('pizzapi');\r\n    \r\n    var thePresident = new pizzapi.Customer(\r\n        {\r\n            firstName: 'Barack',\r\n            lastName: 'Obama',\r\n            address: '700 Pennsylvania Avenue, Washington, DC',\r\n            email: 'barack@whitehouse.gov'\r\n        }\r\n    );\r\n    \r\n    var order = new pizzapi.Order(\r\n        {\r\n            customer: thePresident,\r\n            storeID: myStore.ID\r\n        }\r\n    );\r\n\r\n### Adding a product to the order :\r\n\r\n    order.addItem(\r\n        new pizzapi.Item(\r\n            {\r\n                code: '14SCREEN',\r\n                options: {},\r\n                quantity: 1\r\n            }\r\n        )\r\n    );\r\n\r\n### Validating an Order\r\nThis step is ***Strongly** recommended\r\n\r\n    order.validate(\r\n        function(result) {\r\n            console.log(\"We did it!\");\r\n        }\r\n    );\r\n\r\n### Price an Order\r\n\r\n    order.price(\r\n        function(result) {\r\n            console.log(\"Price!\")\r\n        }\r\n    );\r\n\r\n### Place an Order\r\nAt least one item must've been added to place an order.\r\n\r\n    order.place(\r\n        function(result) {\r\n            console.log(\"Order placed!\");\r\n        }\r\n    );\r\n\r\n## Original module\r\nDepricated due to massive overhauling by @madelinecameron  \r\nStill in npm for use of last version in production as dominos\r\n\r\n` npm install dominos `\r\n\r\n[![NPM Stats for dominos api](https://nodei.co/npm/dominos.png?downloads=true&downloadRank=true&stars=true)](https://www.npmjs.com/package/dominos)\r\n[![NPM Download Graph for dominos api](https://nodei.co/npm-dl/dominos.png?months=6&height=3)](https://www.npmjs.com/package/dominos)\r\n[![dominos api package quality](http://npm.packagequality.com/badge/dominos.png)](http://packagequality.com/#?package=dominos)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}